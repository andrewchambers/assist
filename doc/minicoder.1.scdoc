minicoder(1)

# NAME

minicoder - AI-powered assistant for automating tasks on your machine.

# SYNOPSIS

*minicoder* [_options_] <_request_>

# DESCRIPTION

*minicoder* is a local AI-powered assistant that helps with coding, system administration, data analysis, and other tasks. It works iteratively, executing commands through a controlled shell environment while maintaining focus on specific files.

The assistant can read files, execute shell commands, track changes, and perform complex multi-step tasks autonomously until the task is complete or the iteration limit is reached.

# OPTIONS

*--debug*
	Show debug output including the prompts sent to the AI model.

*--max-iterations* _NUM_
	Set the maximum number of iterations the assistant will perform (default: 50).

*--model* _MODEL_
	Specify which AI model to use. Overrides the MINICODER_MODEL environment variable. If neither is specified, the first available model from the configuration is used.

*--show-reasoning*
	Display reasoning output for models that support it (e.g., models with reasoning capabilities).

*--focus* _FILES_
	Files or glob patterns to focus on initially (space-separated).

*--help*, *-h*
	Display help message and exit.

# ENVIRONMENT

*OPENROUTER_API_KEY*
	API key for OpenRouter service. When set, enables a selection of the latest models from various providers.

*OPENAI_API_KEY*
	API key for OpenAI services. When set without OPENROUTER_API_KEY, enables a selection of the latest OpenAI models.

*MINICODER_MODEL*
	Specify the default model to use. This overrides the default model selection but can still be overridden by the --model command line option.


# FILES

*~/.config/minicoder/models.json*
	User configuration file for AI models (optional).

*/etc/minicoder/models.json*
	System-wide configuration file for AI models (optional).

# CONFIGURATION

*minicoder* can be configured to use different AI models and endpoints through configuration files. If no configuration file exists, the tool will use default models based on available API keys (OPENROUTER_API_KEY or OPENAI_API_KEY).

For detailed information about configuring models, including file format, available parameters, and examples, see *minicoder-model-config*(5).

# EXIT STATUS

*0*
	Task completed successfully.

*1*
	Task failed, was aborted, or an error occurred.

# EXAMPLES

Request help with a coding task:
	$ minicoder "Fix the memory leak in util.c"

Use a specific model with debug output:
	$ minicoder --model gemini --debug "Add error handling to the parser"

Focus on specific files for the task:
	$ minicoder --focus "src/*.c src/*.h" "Refactor the authentication module"

Show reasoning for supported models:
	$ minicoder --model o3 --show-reasoning "Optimize the database queries"

# SEE ALSO

*minicoder-model-config*(5)

# AUTHORS

Maintained by the minicoder project contributors.